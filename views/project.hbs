{{#> modal }}
<div class="d-flex flex-column p-4 gap-4">
  <div class="d-flex align-items-center justify-content-between">
    <div class="fw-semibold text-gray fs-3">
      Create new Project
    </div>
    <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
  </div>

  
  <form id="create-project-form" class="needs-validation" onsubmit="return createProject(event)" novalidate>
    <div class="mb-3">
      <label for="name" class="form-label text-gray">Project Name</label>
      <input type="text" class="form-control" id="name" placeholder="Foobar" required>
      <div class="invalid-feedback">
        Please provide a valid name (Maximum 50 characters)
      </div>
    </div>
    {{!-- <div class="mb-3">
      <label for="description" class="form-label text-gray">Project Description</label>
      <textarea class="form-control" id="description" rows="5" placeholder="Something about this requirement..."></textarea>
    </div> --}}
    <div class="d-flex align-items-center justify-content-center gap-3">
      <button type="submit" class="btn btn-primary">Create</button>
      <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
    </div>
  </form>
  
</div>
{{/modal}}

<main class="d-flex h-100 overflow-hidden">
	<div id="content" class="h-100 overflow-auto p-4" style="width: 100%; ">
		<div class="text-gray fw-semibold fs-4 pb-5">
			My Projects
		</div>
		<div class="d-grid gap-2 project-grid-cols-1 sm:project-grid-cols-2 md:project-grid-cols-4" id="projects">
			<button class="btn bg-white rounded bottom-shadow d-flex flex-column align-items-center justify-content-center" data-bs-toggle="modal" data-bs-target="#modal" style="height: 200px;">
				<div class="">
					<img src="/assets/create_project.png" height="80px" />
				</div>
				<div class="fw-bold fs-4" style="color: #C3CAD9;">
					New Project
				</div>
			</button>
		</div>
	</div>
</main>

{{!-- Template --}}
{{{{rawHelper}}}}
<script id="template-hbs" type="text/x-handlebars-template">
	{{#each projects}}
    <a href="/project/{{id}}/" class="col text-decoration-none bg-white rounded bottom-shadow" style="height: 200px;">
		<div class="d-flex flex-column p-4 justify-content-between h-100">
			<div class="d-flex justify-content-between align-items-center">
				<div class="text-gray fw-bold fs-5">
					{{name}}
				</div>
				<button class="btn p-0">
					<img src="/assets/more_x.png" height="30px"/>
				</button>
			</div>
			<div class="d-flex align-items-center justify-content-between">
				<div class="d-flex flex-column lh-1">
					<div class="text-secondary fs-6">
						Tests
					</div>
					<div class="text-gray fw-bold">
						{{casesCount}}
					</div>
				</div>
				<div class="d-flex flex-column lh-1">
					<div class="text-secondary fs-6">
						Runs
					</div>
					<div class="text-gray fw-bold">
						{{runsCount}}
					</div>
				</div>
				<div class="d-flex flex-column lh-1">
					<div class="text-secondary fs-6">
						Issues
					</div>
					<div class="text-gray fw-bold">
						{{issueCount}}
					</div>
				</div>
			</div>
			<div class="d-flex">
				<div class="d-flex flex-column lh-1">
					<div class="text-secondary fs-6">
						Last Updated
					</div>
					<div class="text-gray fw-bold">
						{{time}}
					</div>
				</div>

			</div>
		</div>
	</a>
	{{/each}}
</script>
{{{{/rawHelper}}}}

<script>
let template = Handlebars.compile(document.getElementById('template-hbs').innerHTML);

function loadProject(page = 1, size = 7) {
	axiosAPI.get('/api/projects')
	.then(res => {
		res.data.forEach(pj => {
			pj.time = dayjs(pj.updatedAt).format('DD/MM/YYYY');
		})
		let html = template({
			name: 'test',
			projects: res.data
		})
		document.getElementById('projects').innerHTML += html;
	})
	.catch(err => {
		console.log(err);
	})
}

loadProject();

function createProject(e) {
	e.preventDefault()
	e.stopPropagation()

	var name = document.getElementById('name');
	var description = document.getElementById('description');

	var myModalEl = document.getElementById('modal');
	var modal = bootstrap.Modal.getInstance(myModalEl);

	if (!name.value.trim() || name.value.length > 50) {
		name.setCustomValidity('invalid');
		//document.querySelector('#name + .invalid-feedback').textContent = 'Passwords must match and be at least 8 characters long.';
	} else {
		name.setCustomValidity('');
	}

	var form = document.getElementById('create-project-form');
	if (!form.checkValidity()) {
		form.classList.add('was-validated');
		return;
	}
	form.classList.remove('was-validated');

	axiosAPI.put('/api/projects', {
		name: name.value,
	})
	.then(res => {
		console.log(res);
		Toastify({
			text: "New project created",
			style: {
			background: "linear-gradient(to right, #198754, #198754)",
			},
			onClick: function(){} // Callback after click
		}).showToast();
		modal.hide();
		setTimeout(() => {
			window.location.reload();
		}, 500);
	})
	.catch(err => {
		console.log(err);
		Toastify({
			text: "Failed to create project",
			style: {
			background: "linear-gradient(to right, #dc3545, #dc3545)",
			},
			onClick: function(){} // Callback after click
		}).showToast();
	})
}

</script>